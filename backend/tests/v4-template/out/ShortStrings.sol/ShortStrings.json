{"abi":[{"type":"error","name":"InvalidShortString","inputs":[]},{"type":"error","name":"StringTooLong","inputs":[{"name":"str","type":"string","internalType":"string"}]}],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cf7172f2d1a7022f865b40bae0b580e0995057b8f9287f02899824dcf160293c64736f6c63430008180033","sourceMap":"1255:3050:68:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3050:68;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cf7172f2d1a7022f865b40bae0b580e0995057b8f9287f02899824dcf160293c64736f6c63430008180033","sourceMap":"1255:3050:68:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/v4-periphery/lib/solmate/src/\",\":v4-core/=lib/v4-core/\",\":v4-periphery/=lib/v4-periphery/contracts/\",\"lib/v4-periphery:@uniswap/v4-core/=lib/v4-core/\"]},\"sources\":{\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xa56d725a0233d9a3aad543e8f7de834a30759061ff8d7cd50daa14756f304299\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2388fe95fe07f021eab6f5b935214d96a422e3883268a48baa1db314c41ef0e0\",\"dweb:/ipfs/QmPcMK2DsjVx9z4DMkR63qpurhfSD4VRkRR41CTbei5Joz\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x8fd6cd1578329513b152f795a6b7b232a11a230fb58168074e802b96dbb6552a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a10135835ae8f0f41644d141e1f35f5e69f63efc8cfb4db402998f515af76715\",\"dweb:/ipfs/Qmdzhd37HjdBBptEG9CPnqoMZNiUbtUJwU78DtmmFajLnD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidShortString"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"type":"error","name":"StringTooLong"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/","openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/","solmate/=lib/v4-periphery/lib/solmate/src/","v4-core/=lib/v4-core/","v4-periphery/=lib/v4-periphery/contracts/","lib/v4-periphery:@uniswap/v4-core/=lib/v4-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":"ShortStrings"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":{"keccak256":"0xa56d725a0233d9a3aad543e8f7de834a30759061ff8d7cd50daa14756f304299","urls":["bzz-raw://2388fe95fe07f021eab6f5b935214d96a422e3883268a48baa1db314c41ef0e0","dweb:/ipfs/QmPcMK2DsjVx9z4DMkR63qpurhfSD4VRkRR41CTbei5Joz"],"license":"MIT"},"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0x8fd6cd1578329513b152f795a6b7b232a11a230fb58168074e802b96dbb6552a","urls":["bzz-raw://a10135835ae8f0f41644d141e1f35f5e69f63efc8cfb4db402998f515af76715","dweb:/ipfs/Qmdzhd37HjdBBptEG9CPnqoMZNiUbtUJwU78DtmmFajLnD"],"license":"MIT"}},"version":1},"id":68}